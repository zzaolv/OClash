# 注意规则在满足自己需求情况下，尽量做到精简，不要过度复杂，以免影响性能。
# 机场订阅
port: 7890
socks-port: 7891
allow-lan: true
mode: rule
log-level: info
external-controller: 127.0.0.1:9090
proxy-providers:
  xml:
    url: "https://cdn2.xmrth.one/s/uOSO4tZMwCRrJaGg?clash=2"
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    proxy: DIRECT # 这里的"直连"应该是对应的一个proxy,需要根据你的实际情况调整,或者改成其他你希望的名字
    header:
      User-Agent:
      - "Clash"
      - "mihomo"
      - "Clash.meta"

# 节点信息
proxies:
  - {name: DIRECT, type: direct, udp: true}
  - {name: "出门回家", server: op.zeaolv.top, port: 12321, type: ss, cipher: aes-256-gcm, password: qa1008611, udp: true}
    # 以下节点会通过 xml 的订阅自动更新，这里留空

# 出站策略
# 注意锚点必须放在引用的上方，可以集中把锚点全部放yaml的顶部。
pr: &pr {type: select, proxies: [🇭🇰 香港节点, 🇨🇳 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇰🇷 韩国节点, 🚀 手动切换, DIRECT, 🌍 全部节点, 🇪🇺 欧洲节点, 🐘 东南亚节点]}
proxy-groups:
  - {name: 🚀 节点选择, type: select, proxies: [🇭🇰 香港节点, 🇨🇳 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇰🇷 韩国节点, 🚀 手动切换, DIRECT, 🌍 全部节点, 🇪🇺 欧洲节点, 🐘 东南亚节点]}
  - {name: 🍀 手动切换, <<: *pr}
  - {name: 🤖 AI, <<: *pr}
  - {name: 📲 电报FCM, <<: *pr}
  - {name: 📹 油管奈飞, <<: *pr}
  - {name: 📺 哔哩哔哩, type: select, proxies: [🎯 全球直连, 🇨🇳 台湾节点, 🇭🇰 香港节点]}
  - {name: 🎵 TikTok, <<: *pr}
  - {name: 🌍 国外媒体, <<: *pr}
  - {name: Ⓜ️ GITHUB, <<: *pr}
  - {name: 🪟 微软服务, <<: *pr}
  - {name: 🍎 苹果服务, <<: *pr}
  - {name: 🎮 游戏平台, <<: *pr}
  - {name: 🎶 网易音乐, type: select, proxies: [DIRECT, 🚀 节点选择]}
  - {name: 🎯 全球直连, type: select, proxies: [DIRECT, 🚀 节点选择]}
  - {name: 🐟 漏网之鱼, <<: *pr}
  - {name: 🇭🇰 香港节点, type: select, use: [xml], filter: "(?i)港|hk|hongkong|hong kong"}
  - {name: 🇯🇵 日本节点, type: select, use: [xml], filter: "(?i)日|jp|japan"}
  - {name: 🇺🇲 美国节点, type: select, use: [xml], filter: "(?i)美|us|unitedstates|united states"}
  - {name: 🇨🇳 台湾节点, type: select, use: [xml], filter: "(?i)台|新北|彰化|TW|Taiwan"}
  - {name: 🇸🇬 狮城节点, type: select, use: [xml], filter: "(?i)新加坡|坡|狮城|SG|Singapore"}
  - {name: 🇰🇷 韩国节点, type: select, use: [xml], filter:  "(?i)KR|Korea|KOR|首尔|韩|韓"}
  - {name: 🐘 东南亚节点, type: select, use: [xml], filter: "(?i)东南亚"}
  - {name: 🇪🇺 欧洲节点, type: select, use: [xml], filter: "(?i)欧洲"}
  - {name: 🌍 全部节点, type: select, include-all: true}

# 规则匹配
rules:
  - RULE-SET,AI,🤖 AI
  - RULE-SET,CN,🎯 全球直连
  - RULE-SET,Netflix,📹 油管奈飞
  - RULE-SET,youtube,📹 油管奈飞
  - RULE-SET,tiktok,🎵 TikTok   
  - RULE-SET,ProxyMedia,🌍 国外媒体
  - RULE-SET,epic,🎮 游戏平台
  - RULE-SET,sony,🎮 游戏平台
  - RULE-SET,steam,🎮 游戏平台
  - RULE-SET,github,Ⓜ️ GITHUB
  - RULE-SET,onedrive,🪟 微软服务
  - RULE-SET,microsoft,🪟 微软服务
  - RULE-SET,paypal,🍀 手动切换
  - RULE-SET,apple,🍎 苹果服务
  - RULE-SET,telegram,📲 电报FCM
  - RULE-SET,FCM,📲 电报FCM
  - RULE-SET,GW,🚀 节点选择
  - RULE-SET,others,🍀 手动切换

  - RULE-SET,GWIP,🤖 AI,no-resolve
  - RULE-SET,NetflixIp,📹 油管奈飞,no-resolve
  - RULE-SET,ProxyMediaIP,🌍 国外媒体,no-resolve
  - RULE-SET,CNIP,🎯 全球直连,no-resolve
  - GEOIP,CN,🎯 全球直连
  - MATCH,🐟 漏网之鱼

# 规则集
rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}
rule-providers: 
  AI: {  <<: *domain, url: "https://raw.githubusercontent.com/zzaolv/OClash/refs/heads/main/GWAI.mrs" }
  CN: {  <<: *domain, url: "https://raw.githubusercontent.com/zzaolv/OClash/refs/heads/main/CN.mrs" }
  ProxyMedia: {  <<: *domain, url: "https://raw.githubusercontent.com/zzaolv/OClash/refs/heads/main/ProxyMedia.mrs" }
  GW: { <<: *domain, url: "https://raw.githubusercontent.com/zzaolv/OClash/refs/heads/main/GW.mrs"}
  github: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.mrs"}
  telegram: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs"}
  FCM: { <<: *class, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/GoogleFCM.list"}
  youtube: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs"}
  Netflix: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.mrs"}
  paypal: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/paypal.mrs"}
  onedrive: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/onedrive.mrs"}
  microsoft: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.mrs"}
  apple: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple-cn.mrs"}
  tiktok: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tiktok.mrs"}
  epic: { <<: *domain, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Epic.list"}
  sony: { <<: *domain, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Sony.list"}
  steam: { <<: *domain, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Steam.list"}
  others: { <<: *domain, url: "https://raw.githubusercontent.com/zzaolv/OClash/refs/heads/main/others.mrs"}

  CNIP: { <<: *ip, url: "https://raw.githubusercontent.com/zzaolv/OClash/refs/heads/main/CNIP.mrs"}
  GWIP: { <<: *ip, url: "https://raw.githubusercontent.com/zzaolv/OClash/refs/heads/main/GWIP.mrs"}
  NetflixIp: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.mrs"}
  ProxyMediaIP: { <<: *ip, url: "https://raw.githubusercontent.com/zzaolv/OClash/refs/heads/main/ProxyMediaIP.mrs"}